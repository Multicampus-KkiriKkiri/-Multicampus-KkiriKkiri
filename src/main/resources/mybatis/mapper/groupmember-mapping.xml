<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.GroupMemberDAO">
	
	<insert id="addMemberToGroup">
		insert into `group_member` values(#{groupId}, #{userId}, #{signUpAnswer}, now(), #{status})
	</insert>
	
	<update id="updateMemberToGroup">
		update `group_member` set signUpAnswer = #{signUpAnswer}, status = #{status}, statusDate = now() where userId = #{userId} and groupId = #{groupId}
	</update>
	
	<select id="getMemberCountInGroup" resultType="int">
		select count(*) as member_count from `group_member` where groupId = #{groupId} and status = '승인'
	</select>
	
	<select id="getGroupMemberList" resultType="userdto">
		SELECT u.userId, u.profileIntro, u.profileImage, u.userNickName
	    FROM `user` u
	    WHERE u.userId IN (
	        SELECT gm.userId
	        FROM `group_member` gm
	        WHERE gm.groupId = #{groupId} AND gm.status = '승인'
	        ORDER BY gm.statusDate
	    )
	</select>
	
	<select id="checkMemberStatusInGroup" resultType="String">
		select status from `group_member` where userId = #{userId} and groupId = #{groupId}
	</select>
	
	<select id="checkUserHistoryInGroup" resultType="String">
		select status from `group_member` where userId = #{userId} and groupId = #{groupId}
	</select>
	
	<!-- 메인페이지 내 모임 정보 가져오기 위해 groupId 받아오기 -->
	<select id="getMyGroupIdList" resultType="int" parameterType="int">
		select groupId from `group_member` 
		where userId = #{userId} and status = '승인'
		order by statusDate desc;
	</select>
	
	
	<!-- 그룹 설정 페이지 -->
	  <!-- 현재 그룹 멤버 목록을 가져옵니다. -->
    <select id="getCurrentMembers" resultType="dto.GroupMemberDTO">
        SELECT groupId, userId, signUpAnswer, statusDate, status
        FROM GroupMember
        WHERE groupId = #{groupId} AND status = 'CURRENT'
    </select>

    <!-- 대기 중인 그룹 멤버 목록을 가져옵니다. -->
    <select id="getPendingMembers" resultType="dto.GroupMemberDTO">
        SELECT groupId, userId, signUpAnswer, statusDate, status
        FROM GroupMember
        WHERE groupId = #{groupId} AND status = 'PENDING'
    </select>
    
    <delete id="kickMember" parameterType="map">
        DELETE FROM group_members WHERE groupId = #{groupId} AND userId = #{userId}
    </delete>

    <update id="approveMember" parameterType="map">
        UPDATE group_members SET status = 'current' WHERE groupId = #{groupId} AND userId = #{userId}
    </update>

    <delete id="rejectMember" parameterType="map">
        DELETE FROM group_members WHERE groupId = #{groupId} AND userId = #{userId} AND status = 'pending'
    </delete>
	
	
		
</mapper>






